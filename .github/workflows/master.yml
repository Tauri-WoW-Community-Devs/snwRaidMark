name: Release
on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.commits[0].message, 'release')
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: '0'
      - name: Set env vars
        id: set_env
        run: |
          VERSION=$(cat snwRaidMark.toc | gawk '/## Version: /' | grep -Eo "(v[0-9]+\.[0-9]+\.[0-9]+)")
          RELEASEBODY=$(awk -v RS='### Version ' '/'$VERSION':(.*)/ {print $0}' CHANGELOG.md)
          RELEASEBODY="${RELEASEBODY//'%'/'%25'}"
          RELEASEBODY="${RELEASEBODY//$'\n'/'%0A'}"
          RELEASEBODY="${RELEASEBODY//$'\r'/'%0D'}"
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=RELEASEBODY::${RELEASEBODY}"
      - name: Build
        run: |
          rsync -av --exclude='*.git*' --exclude='.github' --exclude='CHANGELOG.md' --exclude='README.md' . ./snwRaidMark
          zip -r snwRaidMark-${{ steps.set_env.outputs.version }}.zip ./snwRaidMark
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_env.outputs.version }}
          release_name: snwRaidMark-${{ steps.set_env.outputs.version }}
          body: |
            ${{ steps.set_env.outputs.RELEASEBODY }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./snwRaidMark-${{ steps.set_env.outputs.version }}.zip
          asset_name: snwRaidMark-${{ steps.set_env.outputs.version }}.zip
          asset_content_type: application/zip